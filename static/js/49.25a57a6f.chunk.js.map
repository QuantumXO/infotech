{"version":3,"file":"static/js/49.25a57a6f.chunk.js","mappings":"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","sources":["view/FighterSelection/components/Table/index.tsx","view/FighterSelection/index.tsx","../node_modules/classnames/index.js"],"sourcesContent":["import { memo, ReactElement } from 'react';\nimport { IFighter, IFightersTableProps } from '../../../../interfaces';\nimport { FIGHTERS, FIGHTERS_COLUMNS_NUMBER, FIGHTERS_ROWS_NUMBER } from '../../../../contants';\nimport cx from 'classnames';\n\nconst FightersTable = ({ selectedFighters, activeFighterCell }: IFightersTableProps): ReactElement => {\n\treturn (\n\t\t<table className=\"fighters__table\">\n\t\t\t<tbody>\n\t\t\t{Array.from({ length: FIGHTERS_ROWS_NUMBER }).map((_, rowIndex: number): ReactElement => (\n\t\t\t\t<tr key={rowIndex}>\n\t\t\t\t\t{Array.from({ length: FIGHTERS_COLUMNS_NUMBER }).map((_, colIndex: number): ReactElement => {\n\t\t\t\t\t\tconst index: number = rowIndex * FIGHTERS_COLUMNS_NUMBER + colIndex;\n\t\t\t\t\t\tconst { name, id: fighterId, avatar }: IFighter = FIGHTERS[index];\n\t\t\t\t\t\tconst currentFighterSelectionIndex: number = Object.values(selectedFighters).indexOf(fighterId);\n\t\t\t\t\t\tconst isSelected: boolean = currentFighterSelectionIndex !== -1;\n\t\t\t\t\t\tconst isFirstUserSelectedFighter: boolean = currentFighterSelectionIndex === 0;\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<td\n\t\t\t\t\t\t\t\tid={fighterId}\n\t\t\t\t\t\t\t\tkey={fighterId}\n\t\t\t\t\t\t\t\tdata-selected-user-number={isFirstUserSelectedFighter ? 1 : 2}\n\t\t\t\t\t\t\t\tclassName={cx(\n\t\t\t\t\t\t\t\t\t'fighters__table__cell',\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tactive: activeFighterCell.row === rowIndex && activeFighterCell.col === colIndex,\n\t\t\t\t\t\t\t\t\t\tselected: isSelected,\n\t\t\t\t\t\t\t\t\t\t'first--selected': isFirstUserSelectedFighter,\n\t\t\t\t\t\t\t\t\t\t'second--selected': !isFirstUserSelectedFighter,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<img src={avatar} alt={name} className=\"avatar\"/>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</tr>\n\t\t\t))}\n\t\t\t</tbody>\n\t\t</table>\n\t);\n}\n\nexport default memo(FightersTable);","import { FC, memo, ReactElement, useCallback, useEffect, useState } from 'react';\nimport { FIGHTERS, FIGHTERS_COLUMNS_NUMBER, FIGHTERS_ROWS_NUMBER, VERSUS_URL } from '../../contants';\nimport { IActiveFighterCell, ISelectedFighters } from '../../interfaces';\nimport { useNavigate } from 'react-router-dom';\nimport { NavigateFunction } from 'react-router/dist/lib/hooks';\nimport FightersTable from './components/Table';\nimport { useAppContext } from '../../context';\n\nconst renderFightLabel = (): ReactElement => <div className=\"fight--start\"><span>Prepare!</span></div>;\n\nconst FighterSelection: FC = (): ReactElement => {\n\tconst navigate: NavigateFunction = useNavigate();\n\tconst { selectedFighters, setSelectedFighters, isSelectedFighters } = useAppContext();\n\tconst [activeFighterCell, setActiveFighterCell] = useState<IActiveFighterCell>({ row: 0, col: 0 });\n\n\tuseEffect(() => {\n\t\tif (isSelectedFighters) {\n\t\t\tconst redirectTimeout: NodeJS.Timeout = setTimeout((): void => {\n\t\t\t\tnavigate(VERSUS_URL);\n\t\t\t}, 2000);\n\t\t\treturn (): void => clearTimeout(redirectTimeout);\n\t\t}\n\t}, [isSelectedFighters, navigate]);\n\n\tconst handleEnterKey = useCallback((): void => {\n\t\tif (!isSelectedFighters) {\n\t\t\tconst fighterIndex: number = activeFighterCell.row * FIGHTERS_COLUMNS_NUMBER + activeFighterCell.col;\n\t\t\tconst fighterId: string = FIGHTERS[fighterIndex].id;\n\t\t\tsetSelectedFighters((prevState: ISelectedFighters): ISelectedFighters => {\n\t\t\t\tconst { first, second } = prevState;\n\t\t\t\tconst isCurrentFighterFirst: boolean = !first;\n\t\t\t\tconst isAlreadySelected: boolean = first === fighterId || second === fighterId;\n\t\t\t\treturn isAlreadySelected ? prevState : {\n\t\t\t\t\tfirst: isCurrentFighterFirst ? fighterId : first,\n\t\t\t\t\tsecond: isCurrentFighterFirst ? second : fighterId,\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\t}, [isSelectedFighters, activeFighterCell, setSelectedFighters]);\n\n\tconst handleArrowKey = useCallback((arrowKey: 'ArrowUp' | 'ArrowDown' | 'ArrowLeft' | 'ArrowRight'): void => {\n\t\tsetActiveFighterCell((prevState: IActiveFighterCell): IActiveFighterCell => {\n\t\t\tlet newRow: number | undefined;\n\t\t\tlet newCol: number | undefined;\n\t\t\tswitch (arrowKey) {\n\t\t\t\tcase 'ArrowUp': {\n\t\t\t\t\tnewRow = (prevState.row - 1 + FIGHTERS_ROWS_NUMBER) % FIGHTERS_ROWS_NUMBER;\n\t\t\t\t\tnewCol = prevState.col;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'ArrowDown': {\n\t\t\t\t\tnewRow = (prevState.row + 1) % FIGHTERS_ROWS_NUMBER;\n\t\t\t\t\tnewCol = prevState.col;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'ArrowLeft': {\n\t\t\t\t\tnewRow = prevState.row;\n\t\t\t\t\tnewCol = (prevState.col - 1 + FIGHTERS_COLUMNS_NUMBER) % FIGHTERS_COLUMNS_NUMBER;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'ArrowRight': {\n\t\t\t\t\tnewRow = prevState.row;\n\t\t\t\t\tnewCol = (prevState.col + 1) % FIGHTERS_COLUMNS_NUMBER;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (typeof newRow === 'number' && typeof newCol === 'number') {\n\t\t\t\treturn {\n\t\t\t\t\trow: newRow,\n\t\t\t\t\tcol: newCol,\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthrow new Error('Arrow button error');\n\t\t\t}\n\t\t})\n\t}, []);\n\n\tconst handleKeyPress = (e: KeyboardEvent): void => {\n\t\tconst { key } = e;\n\t\tswitch (key) {\n\t\t\tcase 'ArrowUp':\n\t\t\tcase 'ArrowDown':\n\t\t\tcase 'ArrowLeft':\n\t\t\tcase 'ArrowRight': {\n\t\t\t\thandleArrowKey(key);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'Enter': {\n\t\t\t\thandleEnterKey();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\twindow.addEventListener('keydown', handleKeyPress);\n\t\treturn (): void => {\n\t\t\twindow.removeEventListener('keydown', handleKeyPress);\n\t\t};\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [activeFighterCell]);\n\n\treturn (\n\t\t<div className=\"fighter--selection\">\n\t\t\t{isSelectedFighters && renderFightLabel()}\n\t\t\t<h1 className=\"title\">select your fighter</h1>\n\t\t\t<FightersTable selectedFighters={selectedFighters} activeFighterCell={activeFighterCell}/>\n\t\t\t<div className=\"zone--label\">kombat zone: soul chamber</div>\n\t\t</div>\n\t);\n}\n\nexport default memo(FighterSelection);","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\tvar nativeCodeString = '[native code]';\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n"],"names":["FightersTable","_ref","selectedFighters","activeFighterCell","_jsx","className","children","Array","from","length","FIGHTERS_ROWS_NUMBER","map","_","rowIndex","FIGHTERS_COLUMNS_NUMBER","colIndex","index","name","id","fighterId","avatar","FIGHTERS","currentFighterSelectionIndex","Object","values","indexOf","isSelected","isFirstUserSelectedFighter","cx","active","row","col","selected","src","alt","memo","FighterSelection","navigate","useNavigate","setSelectedFighters","isSelectedFighters","useAppContext","setActiveFighterCell","useState","useEffect","redirectTimeout","setTimeout","VERSUS_URL","clearTimeout","handleEnterKey","useCallback","fighterIndex","prevState","first","second","isCurrentFighterFirst","handleArrowKey","arrowKey","newRow","newCol","Error","handleKeyPress","e","key","window","addEventListener","removeEventListener","_jsxs","hasOwn","hasOwnProperty","classNames","classes","i","arguments","arg","argType","push","isArray","inner","apply","toString","prototype","includes","call","join","module","exports","default"],"sourceRoot":""}